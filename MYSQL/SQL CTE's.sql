use sql_analysis;
CREATE TABLE items (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  price INTEGER NOT NULL
);

CREATE TABLE sales (
  id SERIAL PRIMARY KEY,
  item_id INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  sale_date DATE NOT NULL
);

INSERT INTO items (name, price) VALUES
  ('Product A', 100),
  ('Product B', 200),
  ('Product C', 300);

INSERT INTO sales (item_id, quantity, sale_date) VALUES
  (1, 10, '2022-01-01'),
  (2, 5, '2022-01-01'),
  (3, 2, '2022-01-01'),
  (1, 20, '2022-02-01'),
  (2, 10, '2022-02-01'),
  (3, 4, '2022-02-01'),
  (1, 30, '2022-03-01'),
  (2, 15, '2022-03-01'),
  (3, 6, '2022-03-01');
  
  select * from items;
  select * from sales;
  -- create a CTE that selects the total number of items sold and the total revenue generated by the store for each month.
  select item_id,sum(quantity) from sales group by item_id;
  
  WITH monthly_sales AS (
  SELECT
    extract(month from sale_date) AS month,
    SUM(quantity) AS total_quantity,
    SUM(quantity * price) AS total_revenue
  FROM sales
  JOIN items ON sales.item_id = items.id
  GROUP BY month
),
monthly_items_sold AS (
  SELECT
    extract(month from sale_date) AS month,
    SUM(quantity) AS total_items_sold
  FROM sales
  GROUP BY month
)
SELECT
  monthly_sales.month,
  monthly_items_sold.total_items_sold,
  monthly_sales.total_revenue
FROM monthly_sales
JOIN monthly_items_sold ON monthly_sales.month = monthly_items_sold.month;

  
  